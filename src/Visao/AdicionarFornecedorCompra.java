
package Visao;

import Control.Exceptions.NaoEncontradoException;
import DAO.FornecedorDAO;
import Modelo.FornecedorModel;
import java.awt.AWTEvent;
import java.awt.Toolkit;
import java.awt.event.AWTEventListener;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

public class AdicionarFornecedorCompra extends javax.swing.JDialog {

    CompraView compraView;
    ContaPagarView contaPagar;

    public AdicionarFornecedorCompra(java.awt.Frame parent, boolean modal, CompraView compra, ContaPagarView conta) {
        super(parent, modal);
        initComponents();
        this.compraView = compra;
        this.contaPagar = conta;
        atualizaTabelaSParametro();

        Toolkit.getDefaultToolkit().addAWTEventListener(new AWTEventListener() {

            public void eventDispatched(AWTEvent event) {
                KeyEvent ev = (KeyEvent) event;

                if (ev.getID() == KeyEvent.KEY_RELEASED) {

                    switch (ev.getKeyCode()) {
                        case KeyEvent.VK_F1:
                            dispose();
                            break;
                        case KeyEvent.VK_F2:
                            adicionar();
                            break;
                        case KeyEvent.VK_F5:
                            System.err.println("NOVO");
                            break;
                        case KeyEvent.VK_F4:
                            System.err.println("HISTORICO");
                            break;
                        case KeyEvent.VK_F3:
                            System.err.println("Salvar");
                            break;
                        case KeyEvent.VK_F6:
                            System.err.println("REMOVER");
                            break;

                        default:
                            break;
                    }
                    return;
                }
            }
        }, AWTEvent.KEY_EVENT_MASK);

    }

    public void atualizaTabelaSParametro() {

        FornecedorModel fornecedorModel = new FornecedorModel();
        FornecedorDAO fornecedorDao = new FornecedorDAO();
        ArrayList<FornecedorModel> listaFornecedor;
        try {
            listaFornecedor = fornecedorDao.findAll();
            atualizaTabelaFornecedor(listaFornecedor);
        } catch (SQLException ex) {
            Logger.getLogger(AdicionarProdutoVendaView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void atualizaTabelaFornecedor(ArrayList<FornecedorModel> listaFornecedor) {

        DefaultTableModel val = (DefaultTableModel) jTableFornecedor.getModel();
        val.setNumRows(0);
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        Mascara mascara = new Mascara();

        if (jTableFornecedor != null) {
            listaFornecedor.forEach((fornecedor) -> {
                String cnpj, telefone;
                try {
                    cnpj = mascara.insereMascara(fornecedor.getCnpj(), "cnpj");
                    telefone = mascara.insereMascara(fornecedor.getTelefone(), "telefone");

                    fornecedor.setCnpj(cnpj);
                    fornecedor.setTelefone(telefone);
                    if(fornecedor.getStatus()==true){
                    val.addRow(new Object[]{fornecedor.getNome(), fornecedor.getCnpj(), fornecedor.getTelefone(), fornecedor.getEmail()});
                    }
                    } catch (ParseException ex) {
                    Logger.getLogger(AdicionarFornecedorCompra.class.getName()).log(Level.SEVERE, null, ex);
                }

            });
        }
    }

    public void atualizaTabelaF(FornecedorModel fornecedor) {

//        DefaultTableModel val = (DefaultTableModel) jTableProduto.getModel();
//        val.setNumRows(0); 
//        
//        if (jTableProduto != null) {
//
//            val.addRow(new Object[]{produto.getId(), produto.getListaProdutos().getNome(), produto.getListaProdutos().getValor(), produto.getListaProdutos().getUnidadeMedida(),
//                    produto.getListaProdutos().getCodigoBalanca(), produto.getListaProdutos().getCodigoBarra(), produto.getQtdEstoque()});
//
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jComboBoxTipoPesquisa = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabelLegendaPesquisa = new javax.swing.JLabel();
        jFormattedTextFieldPesquisar = new javax.swing.JFormattedTextField();
        jButtonAdicionar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFornecedor = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(3, 133, 188));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pesquisar Fornecedor");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Pesquisa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/lupa.png"))); // NOI18N
        jButton3.setText("Pesquisar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBoxTipoPesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome", "CNPJ" }));
        jComboBoxTipoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipoPesquisaActionPerformed(evt);
            }
        });

        jLabel2.setText("Tipo:");

        jFormattedTextFieldPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldPesquisarActionPerformed(evt);
            }
        });
        jFormattedTextFieldPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFormattedTextFieldPesquisarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxTipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelLegendaPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 573, Short.MAX_VALUE)
                    .addComponent(jFormattedTextFieldPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelLegendaPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jComboBoxTipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/adicionar24x24.png"))); // NOI18N
        jButtonAdicionar.setText("[F2] Adicionar");
        jButtonAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/voltar24x24.png"))); // NOI18N
        jButton2.setText("[F1] Voltar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tabela de Produtos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        jTableFornecedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fornecedor", "CNPJ", "Telefone", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableFornecedor);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void adicionar() {

        int linha = -1;

        FornecedorModel fornecedorModel = new FornecedorModel();

        FornecedorDAO fornecedorDao = new FornecedorDAO();
        Mascara mascara = new Mascara();
        linha = jTableFornecedor.getSelectedRow();

        if (linha == -1) {

            JOptionPane.showMessageDialog(null, "Selecione um campo na tabela");

        } else {
            try {

                String cnpj = (String) jTableFornecedor.getValueAt(linha, 1);
                cnpj = mascara.limpaMascara(cnpj, "cnpj");
                fornecedorModel = fornecedorDao.pesquisar(cnpj, "cnpj");
                if (this.contaPagar == null) {
                    this.compraView.adicionarFornecedor(fornecedorModel);
                } else {
                    this.contaPagar.adicionarFornecedor(fornecedorModel);
                }
                super.dispose();

            } catch (SQLException ex) {
                Logger.getLogger(AdicionarProdutoVendaView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NaoEncontradoException ex) {
                Logger.getLogger(AdicionarProdutoVendaView.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int index = jComboBoxTipoPesquisa.getSelectedIndex(), codigoInt;

        String nome, cnpj;

        FornecedorModel fornecedorModel = new FornecedorModel();
        FornecedorDAO fornecedorDao = new FornecedorDAO();

        ArrayList<FornecedorModel> listaFornecedor = new ArrayList<>();

        switch (index) {

            case 0: {//NOME
                try {
                    nome = jFormattedTextFieldPesquisar.getText();

                    listaFornecedor = fornecedorDao.pesquisarNomeEspecifico(nome);
                } catch (SQLException ex) {
                    Logger.getLogger(AdicionarFornecedorCompra.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParseException ex) {
                    Logger.getLogger(AdicionarFornecedorCompra.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NaoEncontradoException ex) {
                    Logger.getLogger(AdicionarFornecedorCompra.class.getName()).log(Level.SEVERE, null, ex);
                }
                atualizaTabelaFornecedor(listaFornecedor);

            }

            break;

            case 1: //Codigo
            {
                Mascara mascara = new Mascara();
                cnpj = jFormattedTextFieldPesquisar.getText();
                cnpj = mascara.limpaMascara(cnpj, "cnpj");

                try {
                    fornecedorModel = fornecedorDao.pesquisar(cnpj, "cnpj");

                    atualizaTabelaF(fornecedorModel);

                } catch (SQLException ex) {

                    Logger.getLogger(ManterFornecedorView.class.getName()).log(Level.SEVERE, null, ex);

                } catch (NaoEncontradoException ex) {

                    JOptionPane.showMessageDialog(null, ex.getMessage());

                }

            }

            break;

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBoxTipoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipoPesquisaActionPerformed
        int index = jComboBoxTipoPesquisa.getSelectedIndex();
        MaskFormatter mascara = null;
        String caractere;

        switch (index) {

            case 0: {

                jLabelLegendaPesquisa.setText("Nome:");
                jFormattedTextFieldPesquisar.setText("");

            }

            break;

            case 1: //Codigo
            {
                try {
                    jFormattedTextFieldPesquisar.setValue(null);
                    mascara = new MaskFormatter("##.###.###/####-##");
                    jFormattedTextFieldPesquisar.setFormatterFactory(new DefaultFormatterFactory(mascara));
                } catch (ParseException ex) {
                    Logger.getLogger(ManterClienteView.class.getName()).log(Level.SEVERE, null, ex);
                }
                jLabelLegendaPesquisa.setText("Cnpj:");
                jFormattedTextFieldPesquisar.setText("");
            }

            break;

        }
    }//GEN-LAST:event_jComboBoxTipoPesquisaActionPerformed


    private void jButtonAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarActionPerformed

        adicionar();

    }//GEN-LAST:event_jButtonAdicionarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        super.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jFormattedTextFieldPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldPesquisarActionPerformed
        String verifica;

        verifica = jFormattedTextFieldPesquisar.getText();

        if ("".equals(verifica)) {

            atualizaTabelaSParametro();

        }
    }//GEN-LAST:event_jFormattedTextFieldPesquisarActionPerformed

    private void jFormattedTextFieldPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextFieldPesquisarKeyReleased
        int index = jComboBoxTipoPesquisa.getSelectedIndex();

        FornecedorDAO fornecedorControl = new FornecedorDAO();
        FornecedorModel fornecedorModel = new FornecedorModel();
        ArrayList<FornecedorModel> listaFornecedores;

        String nome, cnpj;

        switch (index) {

            case 0: {

                jLabelLegendaPesquisa.setText("Nome:");
                nome = jFormattedTextFieldPesquisar.getText().trim();

                if ("".equals(nome)) {

                    try {

                        listaFornecedores = fornecedorControl.findAll();
                        atualizaTabelaFornecedor(listaFornecedores);

                    } catch (SQLException ex) {
                        Logger.getLogger(ManterFornecedorView.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } else if (!nome.equals("")) {

                    try {
                        listaFornecedores = fornecedorControl.pesquisarNome(nome);
                        atualizaTabelaFornecedor(listaFornecedores);

                    } catch (SQLException ex) {

                        Logger.getLogger(ManterFornecedorView.class.getName()).log(Level.SEVERE, null, ex);

                    } catch (ParseException ex) {

                        Logger.getLogger(ManterFornecedorView.class.getName()).log(Level.SEVERE, null, ex);

                    } catch (NaoEncontradoException ex) {

                        atualizaTabelaSParametro();

                    }

                }
            }

            break;

            case 1: //CNPJ
            {
                Mascara mascara = new Mascara();
                jLabelLegendaPesquisa.setText("CNPJ:");
                cnpj = jFormattedTextFieldPesquisar.getText();
                cnpj = mascara.limpaMascara(cnpj, "cnpj");

                if ("".equals(cnpj)) {

                    try {
                        listaFornecedores = fornecedorControl.findAll();
                        atualizaTabelaFornecedor(listaFornecedores);

                    } catch (SQLException ex) {

                    }

                } else if (!cnpj.equals("")) {

                    try {
                        fornecedorModel = fornecedorControl.pesquisar(cnpj, "cnpj");
                        ArrayList<FornecedorModel> listaFornecedor = new ArrayList<>();
                        listaFornecedor.add(fornecedorModel);
                        atualizaTabelaFornecedor(listaFornecedor);
                    } catch (SQLException ex) {

                    } catch (NaoEncontradoException ex) {

                        atualizaTabelaSParametro();

                    }

                }

                break;

            }

        }
    }//GEN-LAST:event_jFormattedTextFieldPesquisarKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdicionarFornecedorCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdicionarFornecedorCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdicionarFornecedorCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdicionarFornecedorCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AdicionarFornecedorCompra dialog = new AdicionarFornecedorCompra(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonAdicionar;
    private javax.swing.JComboBox<String> jComboBoxTipoPesquisa;
    private javax.swing.JFormattedTextField jFormattedTextFieldPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelLegendaPesquisa;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableFornecedor;
    // End of variables declaration//GEN-END:variables
}
